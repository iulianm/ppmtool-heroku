{"version":3,"sources":["reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","actions/types.js","store.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/Project/AddProject.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["initialState","projects","project","project_tasks","project_task","user","validToken","combineReducers","errors","state","arguments","length","undefined","action","type","payload","Object","objectSpread","filter","projectIdentifier","backlog","projectSequence","security","initalState","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","apply","createProject","history","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","t0","response","data","stop","this","_x","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","Project_CreateProjectButton","map","Project_ProjectItem","key","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","userIsAuthenticated","firstName","lastName","userIsNotAuthenticated","data-toggle","data-target","UpdateProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","onChange","assertThisInitialized","onSubmit","nextProps","setState","_nextProps$project","match","params","getProject","e","defineProperty","target","name","value","preventDefault","updateProject","classnames","is-invalid","placeholder","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","role","ProjectBoard_Backlog","boardAlgorithm","AddProject","newProject","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","dipatch","Login","loginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","currentTime","Date","now","exp","App","react_redux_es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93cea08c.chunk.js","sourcesContent":["import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        validToken: action.payload ? (state.validToken = true) : (state.validToken = false)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n// Types for BACKLOG actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE PROJECT TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(rootReducer, initalState, compose(applyMiddleware(...middleware)));\r\n}\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"This will delete the project and all the data related to it! Do you want to continue?\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\n\r\nclass Dashboard extends Component {\r\n  componentWillMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dipatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dipatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dipatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", loginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set the token in the header of HTTP calls\r\n    setJWTToken(token);\r\n    const decoded = jwt_decode(token);\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.firstName} {user.lastName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n\r\n    const { id, projectName, projectIdentifier, description, start_date, end_date } = nextProps.project;\r\n    this.setState({ id, projectName, projectIdentifier, description, start_date, end_date });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.projectName })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && <div className=\"invalid-feedback\">{errors.projectName}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.description })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && <div className=\"invalid-feedback\">{errors.description}</div>}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">{project_task.acceptanceCriteria}</p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (window.confirm(`You are deleting Project Task ${pt_id}. This action cannot be undone`)) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n\r\n    const tasks = project_tasks.map(project_task => <ProjectTask key={project_task.id} project_task={project_task} />);\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Tasks for this Project\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.projectName })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && <div className=\"invalid-feedback\">{errors.projectName}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.projectIdentifier })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.description })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && <div className=\"invalid-feedback\">{errors.description}</div>}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    this.props.addProjectTask(this.state.projectIdentifier, newProjectTask, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.summary })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && <div className=\"invalid-feedback\">{errors.summary}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project: {this.state.projectIdentifier} | Task ID: {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.summary })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && <div className=\"invalid-feedback\">{errors.summary}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select className=\"form-control form-control-lg\" name=\"priority\">\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                <p className=\"lead\">Create your account to join active projects or start your own</p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.firstName })}\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.firstName && <div className=\"invalid-feedback\">{errors.firstName}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.lastName })}\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.lastName && <div className=\"invalid-feedback\">{errors.lastName}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.username })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.password })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", { \"is-invalid\": errors.confirmPassword })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && <div className=\"invalid-feedback\">{errors.confirmPassword}</div>}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProject from \"./components/Project/AddProject\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n              <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n              <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}